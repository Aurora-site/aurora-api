name: ci-workflow

on:
  push:
    branches:
      - main
      - test

jobs:
  check:
    name: üõ†Ô∏è Run Pre-commit Hooks
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4.1.7
      - uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - uses: pre-commit/action@v3.0.1

  build:
    name: üê≥ Build Docker image
    runs-on: ubuntu-22.04
    needs: check
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4.1.7

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ghcr.io/akorzunin/aurora-api
          tags: |
            - type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.6.1
        with:
          platforms: linux/amd64
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6.5.0
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: üöÄ Deploy
    runs-on: ubuntu-22.04
    needs: build
    environment:
      name: test
      url: https://test-aurora-api.akorz.duckdns.org
    defaults:
      run:
        working-directory: deploy/test
    steps:
      - uses: actions/checkout@v4.1.7
      - name: Run playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: deploy.yml
          directory: deploy/test
          configuration: |
            [defaults]
            callbacks_enabled = ansible.posix.profile_tasks, ansible.posix.timer
            stdout_callback = yaml
            interpreter_python = /usr/bin/python
            [ssh_connection]
            retries=5
          vault_password: ${{ secrets.ANSIBLE_PASS }}
          inventory: ${{ vars.ANSIBLE_HOSTS }}
          options: |
            --inventory .hosts
            --limit ${{ vars.SERVER_GROUP }}
            --verbose
            --extra-vars "
            PORT=${{ vars.PORT }}
            IGNORE_CORS=${{ vars.IGNORE_CORS }}
            "
