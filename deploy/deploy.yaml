- name: Deploy {{ ENV_NAME }} aurora-api
  hosts: all
  become: false
  vars:
    project_dir: "~/deploy/{{ ENV_NAME }}-aurora-api"

  tasks:
    - name: Create project directory
      ansible.builtin.file:
        path: "{{ project_dir }}"
        state: directory
        mode: "0755"

    - name: Copy files to service directory
      ansible.builtin.copy:
        src: "{{ ENV_NAME }}/{{ item }}"
        dest: "{{ project_dir }}/{{ item }}"
        mode: "0755"
        backup: false
        remote_src: false
      loop:
        - compose.yaml

    - name: Pull new frontend image
      ansible.builtin.command:
        cmd: docker compose pull
        chdir: "{{ project_dir }}"
      environment:
        IMAGE_TAG: "{{ IMAGE_TAG }}"
      register: out
      changed_when: out.rc != 0

    - name: Run migrations
      ansible.builtin.command:
        cmd: docker compose run --rm aurora-api python migrate.py upgrade
        chdir: "{{ project_dir }}"
      environment:
        IMAGE_TAG: "{{ IMAGE_TAG }}"
      register: out
      changed_when: out.rc != 0

    - name: Deploy new image
      ansible.builtin.command:
        cmd: docker compose up -d --force-recreate
        chdir: "{{ project_dir }}"
      environment:
        IMAGE_TAG: "{{ IMAGE_TAG }}"
        PORT: "{{ PORT }}"
        IGNORE_CORS: "{{ IGNORE_CORS }}"
        OW_API_KEY: "{{ OW_API_KEY }}"
        ALLOWED_ORIGINS: "{{ ALLOWED_ORIGINS }}"
        ADMIN_USER: "{{ ADMIN_USER }}"
        ADMIN_PASS: "{{ ADMIN_PASS }}"
        ADMIN_SALT: "{{ ADMIN_SALT }}"
        FCM_PROJECT_ID: "{{ FCM_PROJECT_ID }}"
        FCM_PRIVATE_KEY_ID: "{{ FCM_PRIVATE_KEY_ID }}"
        FCM_PRIVATE_KEY: "{{ FCM_PRIVATE_KEY }}"
        FCM_CLIENT_ID: "{{ FCM_CLIENT_ID }}"
        FCM_DRY_RUN: "{{ FCM_DRY_RUN }}"
        ENV_NAME: "{{ ENV_NAME }}"
      register: out
      changed_when: out.rc != 0
